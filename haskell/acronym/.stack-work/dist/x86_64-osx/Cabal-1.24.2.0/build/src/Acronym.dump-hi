
==================== FINAL INTERFACE ====================
2017-07-10 22:05:14.512238 UTC

interface acronym-1.0.0.2-6M3xmaB9J3sFJ9jMc8OkSn:Acronym 8002
  interface hash: 1cd3ded40011c4d1f9103c712e8a96db
  ABI hash: 09e3308c81f4ca3d8ec6cb029e0690cc
  export-list hash: a663afa1e9c8ac98db3593762a9917a5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f6624f22fcdd76ed0ac6625466e2d712
  sig of: Nothing
  used TH splices: False
  where
exports:
  Acronym.abbreviate
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Char 01433d23661edb6e5ef1536ef1e6774c
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Unicode a175ecf20bf1272d9ae31337e7da43ab
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
92aeee6d4151a57c41964c0dc29832eb
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Acronym.$trModule2
                   Acronym.$trModule1) -}
491d7b46ac330e903a6baa7ea3a981a1
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Acronym"#) -}
cdf53d4836ea6b860725ad87c9880c3d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "acronym-1.0.0.2-6M3xmaB9J3sFJ9jMc8OkSn"#) -}
b14cbd572ae2da1573de7ed1ef513e76
  abbreviate :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: [GHC.Types.Char]) ->
                 case ds of wild {
                   [] -> Acronym.abbreviate1
                   : x xs
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        (GHC.Unicode.toUpper x)
                        (Acronym.abbreviate_f xs) }) -}
a5355575ac54956cac1af42a2b7530ad
  abbreviate1 :: GHC.Base.String
  {- Strictness: x -}
04dc2a5c18f234853b694093fd76820e
  abbreviate_f :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

