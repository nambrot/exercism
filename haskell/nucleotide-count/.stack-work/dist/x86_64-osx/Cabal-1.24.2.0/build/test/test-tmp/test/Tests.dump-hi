
==================== FINAL INTERFACE ====================
2017-07-11 02:33:10.606035 UTC

interface main@main:Main 8002
  interface hash: 03446e14dd96983fab0651bbbe56959a
  ABI hash: 13a76e2b900ba0074a6b641c4696e384
  export-list hash: 14428b8dda50f344ae99b235768d5cc1
  orphan hash: 108e648d46538266921d66404136257e
  flag hash: 375998df8fa893bc4f3d8b223664f32a
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI
                      QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-4HPxin1iv6RAndS8lH3nzo
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-4n6HEMPJR2eJK0JpvCfuPK base-4.9.1.0
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hspec-2.4.1@hspec-2.4.1-FgZ5FWPII9nH6SHHbIVm2y
                      hspec-core-2.4.1@hspec-core-2.4.1-6tkqmeyrVhr6d0P1sYC06o
                      hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd
                      integer-gmp-1.0.0.1
                      nucleotide-count-1.0.0.3@nucleotide-count-1.0.0.3-1meloKazsgKAGU5BFCvnwr
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      quickcheck-io-0.1.4@quickcheck-io-0.1.4-C5t3MfRsr5zrFam5nRAFy
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      setenv-0.1.1.3@setenv-0.1.1.3-8dEhk6JWvlmCmVyBammSpu
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      template-haskell-2.11.1.0
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         quickcheck-io-0.1.4@quickcheck-io-0.1.4-C5t3MfRsr5zrFam5nRAFy:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         hspec-core-2.4.1@hspec-core-2.4.1-6tkqmeyrVhr6d0P1sYC06o:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 0fd5c8559af8bc4b6f38b9cf9ba5a467
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 8b155a212edaca6c85bcefe65a8bc505
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hspec-2.4.1@hspec-2.4.1-FgZ5FWPII9nH6SHHbIVm2y:Test.Hspec bea31b32e61f804c465e458977a70952
import  -/  hspec-2.4.1@hspec-2.4.1-FgZ5FWPII9nH6SHHbIVm2y:Test.Hspec.Runner d26c89b30aa6ec4f37bad7be064368a8
import  -/  hspec-core-2.4.1@hspec-core-2.4.1-6tkqmeyrVhr6d0P1sYC06o:Test.Hspec.Core.Options 9afd1df178f0d8cb598eb115e6e1cc35
import  -/  hspec-core-2.4.1@hspec-core-2.4.1-6tkqmeyrVhr6d0P1sYC06o:Test.Hspec.Core.Runner 91112131c78029c1db0c74c81d2a9057
import  -/  hspec-core-2.4.1@hspec-core-2.4.1-6tkqmeyrVhr6d0P1sYC06o:Test.Hspec.Core.Spec 88c13ab33d12f66bff3dd61e91708754
import  -/  hspec-core-2.4.1@hspec-core-2.4.1-6tkqmeyrVhr6d0P1sYC06o:Test.Hspec.Core.Spec.Monad e451b58182245a5aadf1a8d5c7ba1438
import  -/  hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd:Test.Hspec.Expectations 29d4e6711b7d6d8a68fed679467f46e6
import  -/  nucleotide-count-1.0.0.3@nucleotide-count-1.0.0.3-1meloKazsgKAGU5BFCvnwr:DNA 18e94139f88db4ede668a7ed5b8effa5
d0d2195a9706201ae377cb29ba980d68
  $s$fEqEither ::
    GHC.Classes.Eq
      (Data.Either.Either
         GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int))
                  (Data.Either.$fEqEither_$c==
                     @ GHC.Base.String
                     @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                     Main.$s$fEqEither2
                     Main.$s$fEqEither1)
                  (Data.Either.$fEqEither_$c/=
                     @ GHC.Base.String
                     @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                     Main.$s$fEqEither2
                     Main.$s$fEqEither1) -}
d8263630dcd2f7d93b739e49040c046f
  $s$fEqEither1 :: GHC.Classes.Eq GHC.Base.String
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.$fEq[]_$s$fEq[]1 -}
d3c5edfc128485d1d8d2c69076ecc343
  $s$fEqEither2 ::
    GHC.Classes.Eq (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fEqEither_$s$fEqMap -}
d92afdb9fb2419ae4735ee93b682fceb
  $s$fEqEither3 :: GHC.Classes.Eq GHC.Types.Char
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Classes.$fEqChar -}
b9d9645604a438519fee0049f7af0c4e
  $s$fEqEither_$s$fEqMap ::
    GHC.Classes.Eq (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                  (Data.Map.Base.$fEqMap_$c==
                     @ GHC.Types.Char
                     @ GHC.Types.Int
                     Main.$s$fEqEither3
                     GHC.Classes.$fEqInt)
                  Main.$s$fEqEither_$s$fEqMap_$c/= -}
22ccf72690d6d115301199ca5a435a58
  $s$fEqEither_$s$fEqMap_$c/= ::
    Data.Map.Base.Map GHC.Types.Char GHC.Types.Int
    -> Data.Map.Base.Map GHC.Types.Char GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                   (y :: Data.Map.Base.Map GHC.Types.Char GHC.Types.Int) ->
                 GHC.Classes.not
                   (Data.Map.Base.$fEqMap_$c==
                      @ GHC.Types.Char
                      @ GHC.Types.Int
                      Main.$s$fEqEither3
                      GHC.Classes.$fEqInt
                      x
                      y)) -}
160fc894de59d3d4c56356435bdb5ded
  $s$fShowEither ::
    GHC.Show.Show
      (Data.Either.Either
         GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int))
                  (Data.Either.$fShowEither_$cshowsPrec
                     @ GHC.Base.String
                     @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                     Main.$s$fShowEither2
                     Main.$s$fShowEither1)
                  (Data.Either.$fShowEither_$cshow
                     @ GHC.Base.String
                     @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                     Main.$s$fShowEither2
                     Main.$s$fShowEither1)
                  Main.$s$fShowEither_$s$fShowEither_$cshowList -}
95dd8680063eba2171ed17eb75dd2a09
  $s$fShowEither1 :: GHC.Show.Show GHC.Base.String
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                GHC.Show.$fShow[]_$s$fShow[]1 -}
cde475f5b2f6229f7bbbf9a73856a1ff
  $s$fShowEither2 ::
    GHC.Show.Show (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Main.$s$fShowEither_$s$fShowMap -}
5f8f8b426604c2b2086d22fb73709b18
  $s$fShowEither_$s$fShowEither_$cshowList ::
    [Data.Either.Either
       GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [Data.Either.Either
                              GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Either.Either
                        GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int))
                   (Data.Either.$fShowEither_$cshowsPrec
                      @ GHC.Base.String
                      @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                      Main.$s$fShowEither2
                      Main.$s$fShowEither1
                      Data.Either.$fShowEither1)
                   eta
                   eta1) -}
5ed9b92ff3a6ec710fe2e5eab69c5f6e
  $s$fShowEither_$s$fShowMap ::
    GHC.Show.Show (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                  (Data.Map.Base.$fShowMap_$cshowsPrec
                     @ GHC.Types.Char
                     @ GHC.Types.Int
                     GHC.Show.$fShowChar
                     GHC.Show.$fShowInt)
                  (Data.Map.Base.$fShowMap_$cshow
                     @ GHC.Types.Char
                     @ GHC.Types.Int
                     GHC.Show.$fShowChar
                     GHC.Show.$fShowInt)
                  Main.$s$fShowEither_$s$fShowMap_$cshowList -}
d1df97d25eecab81c2b0e3db76c17fef
  $s$fShowEither_$s$fShowMap_$cshowList ::
    [Data.Map.Base.Map GHC.Types.Char GHC.Types.Int] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Data.Map.Base.Map GHC.Types.Char GHC.Types.Int])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                   (Data.Map.Base.$fShowMap_$cshowsPrec
                      @ GHC.Types.Char
                      @ GHC.Types.Int
                      GHC.Show.$fShowChar
                      GHC.Show.$fShowInt
                      GHC.Show.shows22)
                   ls
                   s) -}
851d72133c31aff85b6c65d1135d328e
  $sfromList ::
    [(GHC.Types.Char, a)] -> Data.Map.Base.Map GHC.Types.Char a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(GHC.Types.Char, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ GHC.Types.Char @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { GHC.Types.C# ipv ->
                           Data.Map.Base.Bin
                             @ GHC.Types.Char
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Base.Tip @ GHC.Types.Char @ a)
                             (Data.Map.Base.Tip @ GHC.Types.Char @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of wild4 { GHC.Types.C# c1 ->
                           case ky of wild5 { GHC.Types.C# c2 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.geChar# c1 c2) of wild6 {
                             GHC.Types.False
                             -> Main.$wpoly_go10
                                  @ a
                                  1#
                                  (Data.Map.Base.Bin
                                     @ GHC.Types.Char
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Base.Tip @ GHC.Types.Char @ a)
                                     (Data.Map.Base.Tip @ GHC.Types.Char @ a))
                                  wild2
                             GHC.Types.True
                             -> Main.$sfromList1
                                  @ a
                                  (Data.Map.Base.Bin
                                     @ GHC.Types.Char
                                     @ a
                                     1#
                                     wild4
                                     x
                                     (Data.Map.Base.Tip @ GHC.Types.Char @ a)
                                     (Data.Map.Base.Tip @ GHC.Types.Char @ a))
                                  wild2 } } } } } } }) -}
2e644ebc8bff3a27effe285491bd8bbe
  $sfromList1 ::
    Data.Map.Base.Map GHC.Types.Char a1
    -> [(GHC.Types.Char, a1)] -> Data.Map.Base.Map GHC.Types.Char a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
6c3842452278f7eeb406a0cfb159b09c
  $w$sgo10 ::
    GHC.Prim.Char#
    -> a1
    -> Data.Map.Base.Map GHC.Types.Char a1
    -> Data.Map.Base.Map GHC.Types.Char a1
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
67be924dd2ae331b450bd630fee81ddc
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map GHC.Types.Char a
    -> [(GHC.Types.Char, a)]
    -> Data.Map.Base.Map GHC.Types.Char a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
2c98c3cff0aa8b880c9adb4cc74b0432
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
7d6e62238c4f6695248f71c8c63890b2
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main145
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
4a2bccdefc7388a573dbb83ad0ca59a5
  main10 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main11) -}
0841ca138aec63dbd0798e202b81c982
  main100 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main101
                   (GHC.Types.[] @ (GHC.Types.Char, GHC.Types.Int))) -}
bb03898820e0ae3c70a117bd04ae77ac
  main101 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main59, Main.main102)) -}
a0bc23cf3f0589f7d1173cd40b9ef21d
  main102 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
4d86bfd0e615e460fefbe5dc87e71502
  main103 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main62, Main.main104)) -}
475e609915882fccb9f20ad195e53ce4
  main104 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 8#) -}
04878654f54228392edf7dcbad5017ca
  main105 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main65, Main.main102)) -}
128a712454703bbea37082568ac2c89f
  main106 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main68, Main.main102)) -}
4a9e20cd3b8f0a27dae53e8c2baea04d
  main107 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main108
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
ac59376f3411de7e7c6b2cbf8404aec8
  main108 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main109) -}
357807c21cc8becb969e6d8b32630e2c
  main109 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main110) -}
e5214ed0825fc527a0f63ed889668cd5
  main11 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main41
                   Main.main30
                   GHC.Types.False
                   Main.main12
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
663fa6206a6dc64d114cf0e437785c40
  main110 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main111) -}
dca365705ae3ca2a509562811f4f0a35
  main111 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main112) -}
625a112de9359b518c639dbf667c5984
  main112 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main40
                   Main.main113
                   GHC.Stack.Types.EmptyCallStack) -}
300def499d6a482c27740adaa518bb71
  main113 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main115
                   Main.main38
                   Main.main115
                   Main.main114) -}
eae9af267f89030b66bdbdc23e93268a
  main114 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 56#) -}
a6d1010d2be4b04a41bf6ec5bbcce009
  main115 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 26#) -}
89c66b7ef5ac0abd18f03959e1c14e78
  main116 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main118
                   Main.main117) -}
9d29b032f57055617f36a08ac2786042
  main117 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "epetitive-sequence-has-only-guanosine"#) -}
a19dd6aac6a3336ea5583ca010dfca0c
  main118 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'r'#) -}
604125e23b82b9bfb1865199df45e3b4
  main119 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main120
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
4d5e520eda9ae31b432ea5ef433915a5
  main12 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main13 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
e285d08dd60743582bfc841f794bd77d
  main120 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main121) -}
d20a683115e24d58cf888d1fbf8e9fe7
  main121 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main139
                   Main.main131
                   GHC.Types.False
                   Main.main122
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
1735524aff55d6d0d36d4e65472da3d3
  main122 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main123) -}
0428fa8c8f06cb11ccda18181a0215d7
  main123 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main69
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main125
                   Main.main124 `cast` (DNA.N:Mon[0])) -}
6291f2fc8b78c94ad90b9feddf639037
  main124 :: DNA.Mon
  {- Unfolding: (DNA.nucleotideCounts_go
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1164a9b1ab1c165aaa43a7d5a512f846
  main125 ::
    Data.Either.Either
      GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                   Main.main126) -}
9ada22c6c558fcf637f7764f5103b9bf
  main126 :: Data.Map.Base.Map GHC.Types.Char GHC.Types.Int
  {- Unfolding: (Main.$sfromList @ GHC.Types.Int Main.main127) -}
06220b9cca040178342b9978d01a144d
  main127 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main106
                   Main.main128) -}
028878936621dd2fa5bb57ba42861a9b
  main128 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main105
                   Main.main129) -}
2e7c518c9c43ddc4c296ecfa72e6659c
  main129 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main130
                   Main.main100) -}
eca85d72db9ed54fcc226d76a9113fbd
  main13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldContain13
                   Main.main20
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.main17
                   Main.main14) -}
d97bb731080f2c4bd6c28bec3cf30c38
  main130 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main62, Main.main102)) -}
50dbb414ddaba5f066a03b6be496a0ff
  main131 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main132
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
84cb3ca8b49ab803f2ab3cae0ba7ec67
  main132 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main133) -}
8562915375b3cdd5bd2e47bfc61819b2
  main133 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main134) -}
1d0b8717ef8e023f1c4b695a026e378f
  main134 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main135) -}
a2a4ddbc1fe31236b18d2b5ad2d6017f
  main135 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main136) -}
43c6a59c45de02bd4f3e6c9d4e698cfa
  main136 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main40
                   Main.main137
                   GHC.Stack.Types.EmptyCallStack) -}
487924aedf57de848f5b0b50810c77cf
  main137 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main67
                   Main.main38
                   Main.main67
                   Main.main138) -}
c088d3ed9eaa60228b37be9690333ddb
  main138 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 53#) -}
25dea50d905854c3b6c5a89f8d244b99
  main139 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main141
                   Main.main140) -}
acfba2d4ce16d7d8f267f10754926277
  main14 :: GHC.Types.Bool
  {- Unfolding: (case Main.main15 `cast` (DNA.N:Mon[0]) of wild {
                   Data.Either.Left ds1 -> GHC.Types.True
                   Data.Either.Right ds1 -> GHC.Types.False }) -}
5793c117ccf56d245e2a99b772891889
  main140 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "mpty dna strand has no nucleotides"#) -}
b6ee3895a5f8b7e42032ffd0d86ecbdb
  main141 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'e'#) -}
86b827767b74cf140edc3ea6ab88d5ec
  main142 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main144
                   Main.main143) -}
54595ac527b81869253728240998dd41
  main143 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ucleotideCounts"#) -}
43f7d2f7c8a4ef38816eb7d54bd1edaf
  main144 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'n'#) -}
7b5eb73ccd71eac403b1ed18b1e75550
  main145 :: Test.Hspec.Core.Options.Config
  {- Unfolding: (Test.Hspec.Core.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Options.ColorAuto
                   GHC.Types.False
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
3ed3d040a9c940079243da0bd21ba033
  main146 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
91c78635e031fca13a88379ec87b4f96
  main15 :: DNA.Mon
  {- Unfolding: (DNA.nucleotideCounts_go Main.main16) -}
1ee9c435902cb0a1c6152fcd1fd05648
  main16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AGXXACT"#) -}
9c47613faa8b37790985fd386cbbcee8
  main17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "predicate failed on: "#
                   Main.main18) -}
302e8bc20457f788d8591aee57b88bd6
  main18 :: [GHC.Types.Char]
  {- Unfolding: (case Main.main15 `cast` (DNA.N:Mon[0]) of wild {
                   Data.Either.Left b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Data.Either.$fShowEither3
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows6
                           (GHC.Show.showLitString b1 Main.main19))
                   Data.Either.Right b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Data.Either.$fShowEither2
                        (Data.Map.Base.$w$cshowsPrec
                           @ GHC.Types.Char
                           @ GHC.Types.Int
                           GHC.Show.$fShowChar
                           GHC.Show.$fShowInt
                           11#
                           b1
                           (GHC.Types.[] @ GHC.Types.Char)) }) -}
f6525354e06dc8f7f01c8d3769e70d7e
  main19 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
397f50157d2655728a8fb62e46e1a6fd
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 (# eta, Main.main3 #)) -}
4a57f4d7be06e0f26eade48c98aa71c7
  main20 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldContain12
                   Test.Hspec.Expectations.shouldSatisfy2
                   Main.main21) -}
84133739a2ef083d1229c6d6cdf6568e
  main21 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main29
                   Main.main22
                   GHC.Stack.Types.EmptyCallStack) -}
6ca9ef284885529d562fffdb57344bf5
  main22 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main25
                   Main.main24
                   Main.main25
                   Main.main23) -}
9fc5be404ae33ab34cad3d09fc38c4f9
  main23 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 64#) -}
09217900ac073b2ade48f29bcdc8c56a
  main24 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 15#) -}
884cd00aa23e22b00b511ad0954914ba
  main25 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 40#) -}
1fbe349353aea2a39fb075dff1a9dc5d
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test/Tests.hs"#) -}
ded6ee6c839cfc1080a7754bde0887d5
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
4a9073bd866e21f7b6864ed207ba7014
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
d6b2b5704c4f91578d91bce7924a8cce
  main29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldSatisfy"#) -}
9deae6254e80f0b14a7616850629a3d9
  main3 ::
    ((),
     [Test.Hspec.Core.Tree.Tree
        (Test.Hspec.Core.Example.ActionWith ())
        (Test.Hspec.Core.Tree.Item ())])
  {- Unfolding: ((GHC.Tuple.(), Main.main4)) -}
5e4cf0133eb600b0d7dee09ed0e84bc3
  main30 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main31
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
fe15a49f8b9c2ef1373e24b79e415a20
  main31 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main32) -}
4577268caad3b8203b47ce9a113effec
  main32 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main33) -}
0a21b62c7c824a53f56ac069e64eba8b
  main33 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main34) -}
a04d03531caed9edf5edcb6a9adf8308
  main34 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main35) -}
8bd0b5973d3121ff4df85a82a24384d6
  main35 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main40
                   Main.main36
                   GHC.Stack.Types.EmptyCallStack) -}
4298925cbd6ba1e10dfe12e140be4435
  main36 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main39
                   Main.main38
                   Main.main39
                   Main.main37) -}
f673feba5a876e2988138b58026076d8
  main37 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 34#) -}
caa8a2c0bfbdb707a5e01fe183418803
  main38 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 13#) -}
2f4469f6be38fdb06d76aff09d5c852b
  main39 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 39#) -}
d842007002053ceae76a7c932981e40e
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main5
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
06938e940c09bc81674611f74a29a220
  main40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
3416db4fec2fe3c307f247b00252c75d
  main41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main43
                   Main.main42) -}
d571999787e6461dd9b6060c531f919d
  main42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "alidates strand"#) -}
9af63997ffe43e11ec00444805d1813c
  main43 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'v'#) -}
0838cdc33151d3aa69b29ad13a255ed6
  main44 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main45
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
e3b1f2d0e2791109918a77d6bea3d647
  main45 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main46) -}
32ff0fa9b5d0b64876a52b6b9224fc09
  main46 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main85
                   Main.main77
                   GHC.Types.False
                   Main.main47
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
f54ff48d9846f6e189b5240fe29a915d
  main47 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main48) -}
40f90722e7b0b649a5cd784d653698a9
  main48 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main69
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main51
                   Main.main49 `cast` (DNA.N:Mon[0])) -}
2f6f95d888f39d39cc5a5e03ad3ae8f7
  main49 :: DNA.Mon
  {- Unfolding: (DNA.nucleotideCounts_go Main.main50) -}
03f2f1c754f5140717734ef5c94eb885
  main5 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main142
                   Main.main6) -}
6726fcdcff583ee15c1e11c3776cf14e
  main50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC"#) -}
154a151eaf4ad929d5c459144eba367e
  main51 ::
    Data.Either.Either
      GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                   Main.main52) -}
e117829736f0f406bd5064f8e0db807d
  main52 :: Data.Map.Base.Map GHC.Types.Char GHC.Types.Int
  {- Unfolding: (Main.$sfromList @ GHC.Types.Int Main.main53) -}
30bc2091b26ab6961698747860b5e23e
  main53 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main66
                   Main.main54) -}
65a97a30e18ddfb6a718b1f57c1fadde
  main54 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main63
                   Main.main55) -}
9aa0c87667f0b98dc10f1800cbbdde06
  main55 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main60
                   Main.main56) -}
1210df577e235214ce494bf7fc48e9be
  main56 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main57
                   (GHC.Types.[] @ (GHC.Types.Char, GHC.Types.Int))) -}
6213acfa55ec8ba5e3fd95d9cfa0066c
  main57 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main59, Main.main58)) -}
d611a6d5b98fb0a9fe9b4d50f12084df
  main58 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 21#) -}
4424faca6952cd6b23afd4ba57fee0cd
  main59 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'T'#) -}
7cade8d2aeed53401f37599025b082c5
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main119
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main7) -}
cd59059afd972c4e1d1e0407093ad88d
  main60 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main62, Main.main61)) -}
6ea60b49c48699a70cb5e9e9564e26c1
  main61 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 17#) -}
d53179204f7eb4a4079d7b032d289878
  main62 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'G'#) -}
dbb47417426fdb7767653629153476ce
  main63 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main65, Main.main64)) -}
5c32c93f478225b14879913f6eb17362
  main64 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 12#) -}
94acd6ecd00c5c2f58d8f040c5afa9c0
  main65 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'C'#) -}
cdf20687db91dae51e517c9f94355bba
  main66 :: (GHC.Types.Char, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main68, Main.main67)) -}
2f662237016c64330a2f62ed23732977
  main67 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 20#) -}
5f7c0a946d9828ed3e51581cd31431e5
  main68 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'A'#) -}
727f6b2f9243d0140930773d9fd6f8fb
  main69 ::
    GHC.Base.String
    -> Data.Either.Either
         GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
    -> Data.Either.Either
         GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (Data.Either.Either
                        GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int))
                   Main.main70
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither) -}
e6b0ab5cc0e70962d5cb7fe790bb4df4
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main88
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main8) -}
da4a98baafa0ac11407f92119a41257f
  main70 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main71) -}
5dc65145944a7f47f70df85efcb953a5
  main71 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main72) -}
5e483eea3828ff336acf3196a8583bf3
  main72 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main76
                   Main.main73
                   GHC.Stack.Types.EmptyCallStack) -}
d498b685782ebbfa1e5a2aff926c435a
  main73 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main75
                   Main.main37
                   Main.main75
                   Main.main74) -}
16141bdb38cd788ddc0e3a35b3e41a52
  main74 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 67#) -}
99a007526d8f6b218bca6dbd8bb68ef6
  main75 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 16#) -}
32bfb37d10bb05b3e6ce7639169064cd
  main76 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
9e58dbb713675214b5ed80a4f4779df4
  main77 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main78
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
5e7a56da6ed2e086b97f17089e8b58ff
  main78 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main79) -}
b5d7bbef70e463308f19f991e2a53deb
  main79 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main80) -}
b96ffe071326df2af0931749b12dfcd8
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main44
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main9
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
7cf051ac4932b67888d939ff4401a477
  main80 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main81) -}
2e6e8c4a192df763778820e51976d4ce
  main81 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main82) -}
f0a103e62008693281a50fa54b13df82
  main82 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main40
                   Main.main83
                   GHC.Stack.Types.EmptyCallStack) -}
fcb564472a6d5a87b645c59d330d50b5
  main83 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main26
                   Main.main84
                   Main.main38
                   Main.main84
                   Main.main25) -}
d7df6dfb038589123c5d65234a5829e1
  main84 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 32#) -}
bce8a9b3353d51e967a9bf80763401a9
  main85 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main87
                   Main.main86) -}
3d1a683d086dbc76a455a612818e5b21
  main86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "ounts all nucleotides"#) -}
7c9d2252315214810ea1610f0bdbd1eb
  main87 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'c'#) -}
e752b4c84dcf219ee552f1e8b22ead00
  main88 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main89
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
3466fea71329efed2f6c6e909436e9ca
  main89 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main90) -}
13b1dbe612c8330f720693085d2013d5
  main9 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main10
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
fa75a8c0f9bb91c23d4b45d49e04ad62
  main90 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main116
                   Main.main107
                   GHC.Types.False
                   Main.main91
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
fb83f86b7e6f4c846c606b92628894fd
  main91 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main92) -}
99ece9ab4511f5338d2e405f95e47928
  main92 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Main.main69
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main95
                   Main.main93 `cast` (DNA.N:Mon[0])) -}
abecffd6a14ac683ab7d660b34b27bb8
  main93 :: DNA.Mon
  {- Unfolding: (DNA.nucleotideCounts_go Main.main94) -}
584f04da8aeeecba0d0bb6c35994bd36
  main94 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GGGGGGGG"#) -}
f0ac47f94bdf6aa8180d0d366de534fe
  main95 ::
    Data.Either.Either
      GHC.Base.String (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
  {- Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                   Main.main96) -}
c2881863f3c81058d1c5599120aaca13
  main96 :: Data.Map.Base.Map GHC.Types.Char GHC.Types.Int
  {- Unfolding: (Main.$sfromList @ GHC.Types.Int Main.main97) -}
f0f319ed95ba96c3aab6dd50d7267cca
  main97 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main106
                   Main.main98) -}
7cc5037b534c143dc953bd2cd8942d73
  main98 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main105
                   Main.main99) -}
df24437d1210944d8a5016baedb21df1
  main99 :: [(GHC.Types.Char, GHC.Types.Int)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Char, GHC.Types.Int)
                   Main.main103
                   Main.main100) -}
"SPEC/Main $fEqEither @ String @ (Map Char Int)" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                             GHC.Base.String)
                                                                 ($dEq :: GHC.Classes.Eq
                                                                            (Data.Map.Base.Map
                                                                               GHC.Types.Char
                                                                               GHC.Types.Int))
  Data.Either.$fEqEither @ [GHC.Types.Char]
                         @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                         $dEq
                         $dEq1
  = Main.$s$fEqEither
"SPEC/Main $fEqMap @ Char @ Int" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                             GHC.Types.Int)
                                                 ($dEq :: GHC.Classes.Eq GHC.Types.Char)
  Data.Map.Base.$fEqMap @ GHC.Types.Char @ GHC.Types.Int $dEq $dEq1
  = Main.$s$fEqEither_$s$fEqMap
"SPEC/Main $fEqMap_$c/= @ Char @ Int" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                  GHC.Types.Int)
                                                      ($dEq :: GHC.Classes.Eq GHC.Types.Char)
  Data.Map.Base.$fEqMap_$c/= @ GHC.Types.Char
                             @ GHC.Types.Int
                             $dEq
                             $dEq1
  = Main.$s$fEqEither_$s$fEqMap_$c/=
"SPEC/Main $fShowEither @ String @ (Map Char Int)" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                 GHC.Base.String)
                                                                   ($dShow :: GHC.Show.Show
                                                                                (Data.Map.Base.Map
                                                                                   GHC.Types.Char
                                                                                   GHC.Types.Int))
  Data.Either.$fShowEither @ [GHC.Types.Char]
                           @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                           $dShow
                           $dShow1
  = Main.$s$fShowEither
"SPEC/Main $fShowEither_$cshowList @ String @ (Map Char Int)" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                            GHC.Base.String)
                                                                              ($dShow :: GHC.Show.Show
                                                                                           (Data.Map.Base.Map
                                                                                              GHC.Types.Char
                                                                                              GHC.Types.Int))
  Data.Either.$fShowEither_$cshowList @ [GHC.Types.Char]
                                      @ (Data.Map.Base.Map GHC.Types.Char GHC.Types.Int)
                                      $dShow
                                      $dShow1
  = Main.$s$fShowEither_$s$fShowEither_$cshowList
"SPEC/Main $fShowMap @ Char @ Int" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                 GHC.Types.Int)
                                                   ($dShow :: GHC.Show.Show GHC.Types.Char)
  Data.Map.Base.$fShowMap @ GHC.Types.Char
                          @ GHC.Types.Int
                          $dShow
                          $dShow1
  = Main.$s$fShowEither_$s$fShowMap
"SPEC/Main $fShowMap_$cshowList @ Char @ Int" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                            GHC.Types.Int)
                                                              ($dShow :: GHC.Show.Show
                                                                           GHC.Types.Char)
  Data.Map.Base.$fShowMap_$cshowList @ GHC.Types.Char
                                     @ GHC.Types.Int
                                     $dShow
                                     $dShow1
  = Main.$s$fShowEither_$s$fShowMap_$cshowList
"SPEC/Main fromList @ Char _" [ALWAYS] forall @ a
                                              ($dOrd :: GHC.Classes.Ord GHC.Types.Char)
  Data.Map.Base.fromList @ GHC.Types.Char @ a $dOrd
  = Main.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

