
==================== FINAL INTERFACE ====================
2017-07-24 18:43:20.809411 UTC

interface anagram-1.0.1.4-6VK1aLRYs4A9bNP4chQ3EH:Anagram 8002
  interface hash: 3b03bd4d111b80cad7f6a42b98b9eee0
  ABI hash: bd51afd083467ea65f66fee73526ed69
  export-list hash: 2e2bec9aac836b754f18758855dedeea
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f6624f22fcdd76ed0ac6625466e2d712
  sig of: Nothing
  used TH splices: False
  where
exports:
  Anagram.anagramsFor
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Char 01433d23661edb6e5ef1536ef1e6774c
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Unicode a175ecf20bf1272d9ae31337e7da43ab
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
a6e1b3ff125e42e0993c77142e71a5d1
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Anagram.$trModule2
                   Anagram.$trModule1) -}
222afd1a931e4f659c66b5edd7fbf6a6
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Anagram"#) -}
e02208da481bf13d01a51725ce9461ef
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "anagram-1.0.1.4-6VK1aLRYs4A9bNP4chQ3EH"#) -}
d05c4069c30abbcaaae86a737e28f5c3
  anagramsFor ::
    GHC.Base.String -> [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 2, Strictness: <L,U><S,1*U>,
     Unfolding: (\ (xs :: GHC.Base.String) (xss :: [GHC.Base.String]) ->
                 Data.OldList.nubBy
                   @ [GHC.Types.Char]
                   GHC.Base.eqString
                   (GHC.List.filter
                      @ [GHC.Types.Char]
                      (\ (copy :: [GHC.Types.Char]) ->
                       case GHC.Base.eqString
                              (Data.OldList.sortBy
                                 @ GHC.Types.Char
                                 GHC.Classes.$fOrdChar_$ccompare
                                 (GHC.Base.map
                                    @ GHC.Types.Char
                                    @ GHC.Types.Char
                                    GHC.Unicode.toLower
                                    xs))
                              (Data.OldList.sortBy
                                 @ GHC.Types.Char
                                 GHC.Classes.$fOrdChar_$ccompare
                                 (GHC.Base.map
                                    @ GHC.Types.Char
                                    @ GHC.Types.Char
                                    GHC.Unicode.toLower
                                    copy)) of wild {
                         GHC.Types.False -> GHC.Types.False
                         GHC.Types.True
                         -> case GHC.Classes.$fEq[]_$s$c==1
                                   (GHC.Base.map
                                      @ GHC.Types.Char
                                      @ GHC.Types.Char
                                      GHC.Unicode.toLower
                                      xs)
                                   (GHC.Base.map
                                      @ GHC.Types.Char
                                      @ GHC.Types.Char
                                      GHC.Unicode.toLower
                                      copy) of wild1 {
                              GHC.Types.False -> GHC.Types.True
                              GHC.Types.True -> GHC.Types.False } })
                      xss)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

