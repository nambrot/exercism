
==================== FINAL INTERFACE ====================
2017-07-10 21:14:56.978847 UTC

interface sum-of-multiples-1.0.0.3-EvDeR05uiXk3jR0RyGzMf3:SumOfMultiples 8002
  interface hash: 320b2801f3c7a4087a1d56ec995b9dde
  ABI hash: 89f57d61bedcfcd44419adcc1ddafb5d
  export-list hash: df6ff72f7e7453a92ff1a66ba782e82b
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f6624f22fcdd76ed0ac6625466e2d712
  sig of: Nothing
  used TH splices: False
  where
exports:
  SumOfMultiples.sumOfMultiples
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
90da4eb39c26c8418d7ec3eb0c7e8479
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   SumOfMultiples.$trModule2
                   SumOfMultiples.$trModule1) -}
d025e8bd2f068fb95aa6746675296deb
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SumOfMultiples"#) -}
e579534337863a313b2c284177b405af
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "sum-of-multiples-1.0.0.3-EvDeR05uiXk3jR0RyGzMf3"#) -}
d1b0001cf07a78d7b45216ab48fddb49
  sumOfMultiples ::
    [GHC.Integer.Type.Integer]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (factors :: [GHC.Integer.Type.Integer])
                   (limit :: GHC.Integer.Type.Integer) ->
                 letrec {
                   f :: GHC.Integer.Type.Integer
                        -> GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]
                     {- Arity: 2, Strictness: <S,U><S,U> -}
                   = \ (i :: GHC.Integer.Type.Integer)
                       (factor :: GHC.Integer.Type.Integer) ->
                     case GHC.Integer.Type.ltInteger#
                            (GHC.Integer.Type.timesInteger i factor)
                            limit of wild { DEFAULT ->
                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                       GHC.Types.False -> GHC.Types.[] @ GHC.Integer.Type.Integer
                       GHC.Types.True
                       -> GHC.Types.:
                            @ GHC.Integer.Type.Integer
                            (GHC.Integer.Type.timesInteger i factor)
                            (f (GHC.Integer.Type.plusInteger i SumOfMultiples.sumOfMultiples2)
                               factor) } }
                 } in
                 letrec {
                   go :: [GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Integer.Type.Integer]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ GHC.Integer.Type.Integer
                       : y ys
                       -> GHC.Base.++
                            @ GHC.Integer.Type.Integer
                            (f SumOfMultiples.sumOfMultiples2 y)
                            (go ys) }
                 } in
                 SumOfMultiples.sumOfMultiples_go
                   (Data.OldList.nubBy
                      @ GHC.Integer.Type.Integer
                      GHC.Integer.Type.eqInteger
                      (go factors))
                   SumOfMultiples.sumOfMultiples1) -}
d9f0197ccaa015e8cbd0a191faee4401
  sumOfMultiples1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
db28b28e57249496cbe30a5bf87f7686
  sumOfMultiples2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
912f2be03395a1985f581c4a1478b7d7
  sumOfMultiples_go ::
    [GHC.Integer.Type.Integer]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

