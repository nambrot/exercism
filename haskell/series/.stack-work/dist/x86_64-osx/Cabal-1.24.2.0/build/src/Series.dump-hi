
==================== FINAL INTERFACE ====================
2017-07-31 18:51:40.768926 UTC

interface series-0.1.0.2-JVXcUv4LEhUIGVa3SEKQw3:Series 8002
  interface hash: a4bd5f2649b65160847532cc32fd87c3
  ABI hash: 8bb28f7fc3797ab33a9fc9140504f9a5
  export-list hash: 1c1d3c8443bef8202bcf0c1c897ecd9f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f6624f22fcdd76ed0ac6625466e2d712
  sig of: Nothing
  used TH splices: False
  where
exports:
  Series.slices
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Char 01433d23661edb6e5ef1536ef1e6774c
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
b2d32a4419b94a22e079cde1258d9bb7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Series.$trModule2
                   Series.$trModule1) -}
3bed4ab6963830b8a527bb3020da2ea0
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Series"#) -}
12eb91c28fc1f74f85fcdfca4ffabcad
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "series-0.1.0.2-JVXcUv4LEhUIGVa3SEKQw3"#) -}
097f549e1430f4ca96febd756dbb85d6
  $wslices :: GHC.Prim.Int# -> GHC.Base.String -> [[GHC.Types.Int]]
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
d8b2d0ed917dd953b8a6170adedefdd7
  slices :: GHC.Types.Int -> GHC.Base.String -> [[GHC.Types.Int]]
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 -> Series.$wslices ww1 w1 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

