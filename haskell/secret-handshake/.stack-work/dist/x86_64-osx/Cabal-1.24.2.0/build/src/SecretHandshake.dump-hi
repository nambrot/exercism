
==================== FINAL INTERFACE ====================
2017-07-24 18:27:59.673691 UTC

interface secret-handshake-1.0.0.3-HWL7x635vSICtcfK6EvA32:SecretHandshake 8002
  interface hash: 11b3017aaf17066a41f32cf67f3843eb
  ABI hash: 6225bc72e3fab764813c6c132ca3f88b
  export-list hash: 60ec4a4d9750f156921ffc22c809c3e8
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f6624f22fcdd76ed0ac6625466e2d712
  sig of: Nothing
  used TH splices: False
  where
exports:
  SecretHandshake.handshake
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity base-4.9.1.0:Data.List.NonEmpty
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Semigroup
                         base-4.9.1.0:Data.Type.Equality base-4.9.1.0:Data.Version
                         base-4.9.1.0:Data.Void base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Bits d707ac81dd0124c7a7fb3234df2c8548
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State 749dca8ca0e6625b32091d445bd92b01
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State.Class 6d31234b0a911b56412061943d18b89e
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.State.Lazy 371607e50dde46b5f4103b3ab334a497
cc5d93cd490568207a945441f1b7765e
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   SecretHandshake.$trModule2
                   SecretHandshake.$trModule1) -}
5953c4398289a5a9a9fcbae08b5f69ff
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SecretHandshake"#) -}
3865dc1b1b0795fb31c3493e7b76a2c1
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "secret-handshake-1.0.0.3-HWL7x635vSICtcfK6EvA32"#) -}
fe6bcc971377162efbaf818365d5f74a
  $wgo ::
    [[[GHC.Types.Char]] -> [[GHC.Types.Char]]]
    -> GHC.Types.Int
    -> [GHC.Base.String]
    -> (# GHC.Types.Int, [GHC.Base.String] #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U(U)><L,U>,
     Inline: [0] -}
943124b2c6588d25902f697d2797930c
  $whandshake :: GHC.Prim.Int# -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># ww 31#) of wild {
                   GHC.Types.False
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 0#) of wild1 {
                        GHC.Types.False
                        -> case SecretHandshake.$wgo
                                  SecretHandshake.handshake1
                                  (GHC.Types.I# ww)
                                  (GHC.Types.[] @ GHC.Base.String) of ww1 { (#,#) ww2 ww3 ->
                           ww3 }
                        GHC.Types.True -> GHC.Types.[] @ GHC.Base.String }
                   GHC.Types.True -> GHC.Types.[] @ GHC.Base.String }) -}
8598511369da0a88ca483815d0d1d096
  handshake :: GHC.Types.Int -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 SecretHandshake.$whandshake ww1 }) -}
4133dd9fb6497219b1cb9dc88ba3d2fc
  handshake1 :: [[[GHC.Types.Char]] -> [[GHC.Types.Char]]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([[GHC.Types.Char]] -> [[GHC.Types.Char]])
                   SecretHandshake.handshake15
                   SecretHandshake.handshake2) -}
fa3a51a0722689f9696ce42fe5a79ac9
  handshake10 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   SecretHandshake.handshake11
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
67361b77c35fc079b09b39288bcbbba2
  handshake11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "close your eyes"#) -}
1c27edb9d005bb31f778b7301283b2aa
  handshake12 :: [[GHC.Types.Char]] -> [[GHC.Types.Char]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: [[GHC.Types.Char]]) ->
                 GHC.Base.augment
                   @ [GHC.Types.Char]
                   (\ @ b
                      (c :: [GHC.Types.Char] -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ [GHC.Types.Char] @ b c n ds)
                   SecretHandshake.handshake13) -}
ac5070705385fd0b1dd7e120ab61802a
  handshake13 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   SecretHandshake.handshake14
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
94d2c14f24ccebbb3370916e402921c6
  handshake14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "double blink"#) -}
c238c93813b7c8c099acf0fcab6eab82
  handshake15 :: [[GHC.Types.Char]] -> [[GHC.Types.Char]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: [[GHC.Types.Char]]) ->
                 GHC.Base.augment
                   @ [GHC.Types.Char]
                   (\ @ b
                      (c :: [GHC.Types.Char] -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ [GHC.Types.Char] @ b c n ds)
                   SecretHandshake.handshake16) -}
2490ea08fd46256580adc225dce8250c
  handshake16 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   SecretHandshake.handshake17
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
7461b78fcdbfbfaf4ea47da9dc7460a1
  handshake17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "wink"#) -}
07880ee6b4e70b7311d828d52f33d1f2
  handshake2 :: [[[GHC.Types.Char]] -> [[GHC.Types.Char]]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([[GHC.Types.Char]] -> [[GHC.Types.Char]])
                   SecretHandshake.handshake12
                   SecretHandshake.handshake3) -}
e9ff9b1e38bb1e0b409f7bc20c35ad3e
  handshake3 :: [[[GHC.Types.Char]] -> [[GHC.Types.Char]]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([[GHC.Types.Char]] -> [[GHC.Types.Char]])
                   SecretHandshake.handshake9
                   SecretHandshake.handshake4) -}
0f0a3dbfc9c6dfaacf631ce5765b161b
  handshake4 :: [[[GHC.Types.Char]] -> [[GHC.Types.Char]]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([[GHC.Types.Char]] -> [[GHC.Types.Char]])
                   SecretHandshake.handshake6
                   SecretHandshake.handshake5) -}
3d75c372f701ce54d8608e5eb4be707c
  handshake5 :: [[[GHC.Types.Char]] -> [[GHC.Types.Char]]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ ([[GHC.Types.Char]] -> [[GHC.Types.Char]])
                   (GHC.List.reverse @ [GHC.Types.Char])
                   (GHC.Types.[] @ ([[GHC.Types.Char]] -> [[GHC.Types.Char]]))) -}
bb619b7bb43b94822d3c7ba2c7279e3a
  handshake6 :: [[GHC.Types.Char]] -> [[GHC.Types.Char]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: [[GHC.Types.Char]]) ->
                 GHC.Base.augment
                   @ [GHC.Types.Char]
                   (\ @ b
                      (c :: [GHC.Types.Char] -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ [GHC.Types.Char] @ b c n ds)
                   SecretHandshake.handshake7) -}
4bcd8a50ccdbee5f40f4bfe687940237
  handshake7 :: [[GHC.Types.Char]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   SecretHandshake.handshake8
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
8e8634b6721e0dc85916f6f941b0ffec
  handshake8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "jump"#) -}
7b44ef56ad0ca499e8a8912a0b2f4f5b
  handshake9 :: [[GHC.Types.Char]] -> [[GHC.Types.Char]]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: [[GHC.Types.Char]]) ->
                 GHC.Base.augment
                   @ [GHC.Types.Char]
                   (\ @ b
                      (c :: [GHC.Types.Char] -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ [GHC.Types.Char] @ b c n ds)
                   SecretHandshake.handshake10) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

